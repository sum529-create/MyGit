package ex02_downcasting;

// 모든 사람은 Person 타입이다.

class Person{
	// method
	public void eat() {
		System.out.println("먹는다.");
	}
	public void sleep() {
		System.out.println("잔다.");
	}
//	public void study() {	}
//	public void work() {	}
}

class Student extends Person{
	// method
	public void study() {
		System.out.println("공부한다.");
	}
}

class Worker extends Person{
	// method
	public void work() {
		System.out.println("일한다.");
	}
}

public class Ex01_Person {

	public static void main(String[] args) {
		
		// upcasting
		// 슈퍼클래스타입 객체 = new 서브 클래스
		
		Person p1 = new Student();
		Person p2 = new Worker();
		
		p1.eat();
		p1.sleep();
		// p1.study(); 	// Person 클래스의 메소드만 호출할 수 있어서
		
		p2.eat();
		p2.sleep();
		// p2.work();
		
		// Person 타입의 p1 객체를 Student 타입으로 변환하면 study 메소드도 보인다.
				
		// downcasting
		// 1. 슈퍼 클래스 타입의 객체를 서브 클래스 타입으로 변환한다.
		// 2. 반드시 강제로 벼노한해야 한다.
		((Student)p1).study();
		((Worker)p2).work();
		
		
		
		// 실수해보자
		// 잘못된 downcasting
		
		Person p3 = new Student();
		((Worker)p3).work(); 	// 잘못된 downcasting이지만 이클립스는 문제를 못 잡는다.
		
		// 안전한 캐스팅을 위해서
		// 타입을 확인하고 캐스팅하자.
		// 클래스 타입 확인 : instanceof

	}

}
